{
  "addr_list": [],
  "M_global": [],
  "c_global": [],
  "atomic_ops_checked": [
    {
      "type": "var_decl",
      "name": "r"
    },
    {
      "type": "raw_stmt",
      "params": {
        "stmt": "Return"
      }
    },
    {
      "type": "var_decl",
      "name": "r"
    },
    {
      "type": "raw_stmt",
      "params": {
        "stmt": "Return"
      }
    },
    {
      "type": "var_decl",
      "name": "r"
    },
    {
      "type": "raw_stmt",
      "params": {
        "stmt": "Return"
      }
    },
    {
      "type": "var_decl",
      "name": "angle"
    },
    {
      "type": "var_decl",
      "name": "w"
    },
    {
      "type": "raw_stmt",
      "params": {
        "stmt": "Return"
      }
    },
    {
      "type": "raw_stmt",
      "params": {
        "stmt": "If"
      }
    },
    {
      "type": "var_decl",
      "name": "half"
    },
    {
      "type": "var_decl",
      "name": "even"
    },
    {
      "type": "var_decl",
      "name": "odd"
    },
    {
      "type": "assign",
      "lhs": "ArrayRef",
      "rhs": "ArrayRef",
      "loop_context": {
        "i": 0
      },
      "lhs_concrete": "ArrayRef",
      "rhs_concrete": "ArrayRef"
    },
    {
      "type": "assign",
      "lhs": "ArrayRef",
      "rhs": "ArrayRef",
      "loop_context": {
        "i": 0
      },
      "lhs_concrete": "ArrayRef",
      "rhs_concrete": "ArrayRef"
    },
    {
      "type": "assign",
      "lhs": "ArrayRef",
      "rhs": "ArrayRef",
      "loop_context": {
        "i": 1
      },
      "lhs_concrete": "ArrayRef",
      "rhs_concrete": "ArrayRef"
    },
    {
      "type": "assign",
      "lhs": "ArrayRef",
      "rhs": "ArrayRef",
      "loop_context": {
        "i": 1
      },
      "lhs_concrete": "ArrayRef",
      "rhs_concrete": "ArrayRef"
    },
    {
      "type": "call",
      "func": "FFT_CooleyTukey",
      "args": [
        "even",
        "2"
      ],
      "args_concrete": [
        "even",
        "2"
      ]
    },
    {
      "type": "call",
      "func": "FFT_CooleyTukey",
      "args": [
        "odd",
        "2"
      ],
      "args_concrete": [
        "odd",
        "2"
      ]
    },
    {
      "type": "raw",
      "stmt": {
        "decl": "t"
      },
      "loop_context": {
        "k": 0
      }
    },
    {
      "type": "assign",
      "lhs": "ArrayRef",
      "rhs": "c_add(ArrayRef, t)",
      "loop_context": {
        "k": 0
      },
      "lhs_concrete": "ArrayRef",
      "rhs_concrete": "c_add(ArrayRef, t)"
    },
    {
      "type": "assign",
      "lhs": "ArrayRef",
      "rhs": "c_sub(ArrayRef, t)",
      "loop_context": {
        "k": 0
      },
      "lhs_concrete": "ArrayRef",
      "rhs_concrete": "c_sub(ArrayRef, t)"
    },
    {
      "type": "raw",
      "stmt": {
        "decl": "t"
      },
      "loop_context": {
        "k": 1
      }
    },
    {
      "type": "assign",
      "lhs": "ArrayRef",
      "rhs": "c_add(ArrayRef, t)",
      "loop_context": {
        "k": 1
      },
      "lhs_concrete": "ArrayRef",
      "rhs_concrete": "c_add(ArrayRef, t)"
    },
    {
      "type": "assign",
      "lhs": "ArrayRef",
      "rhs": "c_sub(ArrayRef, t)",
      "loop_context": {
        "k": 1
      },
      "lhs_concrete": "ArrayRef",
      "rhs_concrete": "c_sub(ArrayRef, t)"
    },
    {
      "type": "call",
      "func": "free",
      "args": [
        "even"
      ],
      "args_concrete": [
        "even"
      ]
    },
    {
      "type": "call",
      "func": "free",
      "args": [
        "odd"
      ],
      "args_concrete": [
        "odd"
      ]
    },
    {
      "type": "call",
      "func": "printf",
      "args": [
        "\"%d: %.4f + %.4fi\\n\"",
        "0",
        "ArrayRef.re",
        "ArrayRef.im"
      ],
      "loop_context": {
        "i": 0
      },
      "args_concrete": [
        "\"%d: %.4f + %.4fi\\n\"",
        "0",
        "ArrayRef.re",
        "ArrayRef.im"
      ]
    },
    {
      "type": "call",
      "func": "printf",
      "args": [
        "\"%d: %.4f + %.4fi\\n\"",
        "1",
        "ArrayRef.re",
        "ArrayRef.im"
      ],
      "loop_context": {
        "i": 1
      },
      "args_concrete": [
        "\"%d: %.4f + %.4fi\\n\"",
        "1",
        "ArrayRef.re",
        "ArrayRef.im"
      ]
    },
    {
      "type": "call",
      "func": "printf",
      "args": [
        "\"%d: %.4f + %.4fi\\n\"",
        "2",
        "ArrayRef.re",
        "ArrayRef.im"
      ],
      "loop_context": {
        "i": 2
      },
      "args_concrete": [
        "\"%d: %.4f + %.4fi\\n\"",
        "2",
        "ArrayRef.re",
        "ArrayRef.im"
      ]
    },
    {
      "type": "call",
      "func": "printf",
      "args": [
        "\"%d: %.4f + %.4fi\\n\"",
        "3",
        "ArrayRef.re",
        "ArrayRef.im"
      ],
      "loop_context": {
        "i": 3
      },
      "args_concrete": [
        "\"%d: %.4f + %.4fi\\n\"",
        "3",
        "ArrayRef.re",
        "ArrayRef.im"
      ]
    },
    {
      "type": "var_decl",
      "name": "N"
    },
    {
      "type": "var_decl",
      "name": "x"
    },
    {
      "type": "assign",
      "lhs": "ArrayRef.re",
      "rhs": "sin((((2 * M_PI) * 0) / 4))",
      "loop_context": {
        "i": 0
      },
      "lhs_concrete": "ArrayRef.re",
      "rhs_concrete": "sin((((2 * M_PI) * 0) / 4))"
    },
    {
      "type": "assign",
      "lhs": "ArrayRef.im",
      "rhs": "0.0",
      "loop_context": {
        "i": 0
      },
      "lhs_concrete": "ArrayRef.im",
      "rhs_concrete": "0.0"
    },
    {
      "type": "assign",
      "lhs": "ArrayRef.re",
      "rhs": "sin((((2 * M_PI) * 1) / 4))",
      "loop_context": {
        "i": 1
      },
      "lhs_concrete": "ArrayRef.re",
      "rhs_concrete": "sin((((2 * M_PI) * 1) / 4))"
    },
    {
      "type": "assign",
      "lhs": "ArrayRef.im",
      "rhs": "0.0",
      "loop_context": {
        "i": 1
      },
      "lhs_concrete": "ArrayRef.im",
      "rhs_concrete": "0.0"
    },
    {
      "type": "assign",
      "lhs": "ArrayRef.re",
      "rhs": "sin((((2 * M_PI) * 2) / 4))",
      "loop_context": {
        "i": 2
      },
      "lhs_concrete": "ArrayRef.re",
      "rhs_concrete": "sin((((2 * M_PI) * 2) / 4))"
    },
    {
      "type": "assign",
      "lhs": "ArrayRef.im",
      "rhs": "0.0",
      "loop_context": {
        "i": 2
      },
      "lhs_concrete": "ArrayRef.im",
      "rhs_concrete": "0.0"
    },
    {
      "type": "assign",
      "lhs": "ArrayRef.re",
      "rhs": "sin((((2 * M_PI) * 3) / 4))",
      "loop_context": {
        "i": 3
      },
      "lhs_concrete": "ArrayRef.re",
      "rhs_concrete": "sin((((2 * M_PI) * 3) / 4))"
    },
    {
      "type": "assign",
      "lhs": "ArrayRef.im",
      "rhs": "0.0",
      "loop_context": {
        "i": 3
      },
      "lhs_concrete": "ArrayRef.im",
      "rhs_concrete": "0.0"
    },
    {
      "type": "call",
      "func": "printf",
      "args": [
        "\"Input:\\n\""
      ],
      "args_concrete": [
        "\"Input:\\n\""
      ]
    },
    {
      "type": "call",
      "func": "print_fft",
      "args": [
        "x",
        "4"
      ],
      "args_concrete": [
        "x",
        "4"
      ]
    },
    {
      "type": "call",
      "func": "FFT_CooleyTukey",
      "args": [
        "x",
        "4"
      ],
      "args_concrete": [
        "x",
        "4"
      ]
    },
    {
      "type": "call",
      "func": "printf",
      "args": [
        "\"\\nFFT Output:\\n\""
      ],
      "args_concrete": [
        "\"\\nFFT Output:\\n\""
      ]
    },
    {
      "type": "call",
      "func": "print_fft",
      "args": [
        "x",
        "4"
      ],
      "args_concrete": [
        "x",
        "4"
      ]
    },
    {
      "type": "raw_stmt",
      "params": {
        "stmt": "Return"
      }
    }
  ]
}